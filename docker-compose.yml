version: '3'

services:
    postgres:
        container_name: postgres
        image: postgres:latest  
        restart:  always      
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
        volumes:
            - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
            - ./postgres-data:/var/lib/postgresql/data

    redis:
        image: redis
        container_name: redis
        restart:  on-failure
        volumes:
            - ./redis-data:/data

    auth:
        container_name: auth-service
        build: ./auth-service
        restart: on-failure
        ports:
            - "8080:8080"
        command: bash -c 'while !</dev/tcp/postgres/5432; do sleep 1; done; npm start'

    hasura:
        container_name: hasura
        image: hasura/graphql-engine:latest
        ports:
            - "8484:8080"
        depends_on:
            - "postgres"
        restart: always
        environment:
            HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
            HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
            HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}

    #resource:
    #    container_name: resource-service
    #    restart: on-failure
    #    build: ./resource-service
    #    ports:
    #        - "8484:8484"       